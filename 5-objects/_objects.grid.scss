/*==================================================
=            GRID-BASED LAYOUT ELEMENTS            =
==================================================*/


/* ===== PROPERTIES ========================================================= */



$block-margin-horizontal:              $base-margin;
$block-mobile-large-margin-horizontal: $block-margin-horizontal / 1.66;
$block-mobile-margin-horizontal:       $block-margin-horizontal / 2;

$block-margin-vertical:              $base-margin * 1.2;
$block-mobile-large-margin-vertical: $block-margin-vertical / 1.25;
$block-mobile-margin-vertical:       $block-margin-vertical / 1.5;





/* ===== SECTORS ============================================================ */


// To divide page into independent sectors.
.sector,
.sector-container {
    @include clearfix();

    // Adds highlight
    &.highlighted {
        display: block;
        background-color: $block-highlight-colour;
    }

    // Adds line separator to the end of the sector
    &.separated {
        display: block;
        border-bottom: $delim-border;
    }

    // Empty sector, hide it's visibility
    &.blank {
        &.separated { border: none; }
        &.highlighted { background: none; }
    }
}

.separated {
    // The only way to cover horizontal separator of the previous block is to shift
    // current block slightly upwards and re-draw it with separator of the
    // background colour.
    & + &.no-lines {
        position:   relative; top: -1 * $base-border-width;
        border:     none;
        border-top: $base-border-width solid $base-bg-colour;
    }

    // Add a margin around a block without lines OR with highlight when there's another highlighted block to avoid background blending together
    &.highlighted + &.no-lines { padding-top: $base-padding; }

    &.no-lines + &.highlighted,
    &.highlighted + &.highlighted { margin-top: $base-padding; }
}



//.layout-rebase {} // Layout normaliser => Reset previous layouting rules





/* ===== BLOCKS ============================================================= */

// To be @extend-ed
@mixin block-top-margin {
    padding-top: $block-margin-vertical;

    @include breakpoint( $mobile ) {
        padding-top: $block-mobile-margin-vertical;
    }

    @include breakpoint( $mobile-large ) {
        padding-top: $block-mobile-large-margin-vertical;
    }
}


// Standard block container
.block {
    display: block;
    padding: $block-margin-vertical $block-margin-horizontal;

    // 1. Collapse space in all siblings (default)...
    .sector + .sector & { padding-top: 0; }

    // 2. Enable in some cases
    .sector + .sector.highlighted &,

    .sector.highlighted + .sector &,
    .sector.separated + .sector &,
    .sector.blank + .sector &, // Overrides 1B in case dynamic block is NOT rendered (e.g. specific content only)

    // Resets block's margin
    .sector .layout-rebase & {
        @include block-top-margin();
    }


    // 1B. ... and all block-containers
    .sector .block-container &:not(:first-child),
    .block + .block-container &:first-child,
    .block + .block-container.two-col-layout &:last-child { padding-top: 0; }


    // 2) Responsiveness
    @include breakpoint( $mobile ) {
        padding: $block-mobile-margin-vertical $block-mobile-margin-horizontal;
    }

    @include breakpoint( $mobile-large ) {
        padding: $block-mobile-large-margin-vertical $block-mobile-large-margin-horizontal;
    }

    &.no-bg { background: inherit; } // Eliminates background
}


.sector .block-container .blank:first-child {
    @include block-top-margin();
}


// Makes content aligned to the center if the width of the
// viewport surpasses $base-width.
.centraliser {
    @include centralise;
}

/* Two-column grid layout. */
.sector .two-col-layout {

    // Outter container
    //TODO: Refactor and turn into new grid
    &.block-container { width: 100%; }

    @include breakpoint( $desktop-and-bigger ) {
        display: flex;
        align-items: stretch;
    }

    // Column; makes two cols - 65% and 35% width
    .block {
        // Right column
        &:last-child { padding-top: 0; }

        &.btns-holder {
            text-align: center;

            ul,
            ol {
                text-align: left;
            }
        }

        @include breakpoint( $desktop-and-bigger ) {
            // Left column
            &:first-child {
                @include make-table-column( $two-col-layout-left-ratio );
            }

            // Right column
            &:last-child {
                @include make-table-column( $two-col-layout-right-ratio );
                @include block-top-margin();
            }

            &.btns-holder {
                display: flex;
                justify-content: flex-end;
                align-items: center;
                text-align: right;
                @include make-table-column( $two-col-layout-right-ratio );

                .btn {
                    text-align: center;
                    margin-top: 0;
                    margin-bottom: 0;
                }
            }
        }

        &.stretch { width: 100%; }
    }

    &.swap-columns {

        // Swap column blocks - 35% left and 65% right
        .block {
            @include breakpoint( $desktop-and-bigger ) {

                // Left column
                &:first-child {
                    @include make-table-column( $two-col-layout-right-ratio );
                }

                // Right column
                &:last-child {
                    @include make-table-column( $two-col-layout-left-ratio );
                }
            }
        }
    }

    // Adds line separators to divide blocks
    &.separated {
        .block {

            // Right column
            &:last-child {
                border-left: none;
                border-top: $delim-border;
                @include block-top-margin();
            }

            @include breakpoint( $desktop-and-bigger) {
                &:last-child {
                    border-left: $delim-border;
                    border-top: none;
                }
            }

            &.stretch { border-left: 0; }
        }
    }
}





/* ===== SUB-BLOCKS ========================================================= */


/**
* A block with children that are placed next to each other
* into flexible columns.
*/
.flexi-columns {
    display: flex;
    flex-wrap: nowrap;

    //.column{}

    @include breakpoint( $mobile-large-and-smaller ) {
        display: block;
    }

    // Two columns in a single row
    &.two-columns {
        .column {
            // 1st column
            &:first-child:not(:last-child) {
                width: 100% * (1 - $two-col-layout-right-ratio );
                flex: 1 1 auto;
            }

            // 2nd column
            &:last-child:not(:first-child) {
                @include breakpoint( $tablet-and-bigger ) {
                    width: 100% * $two-col-layout-right-ratio;
                    margin-left: 2.5em;
                }

                @include breakpoint( $mobile-large-and-smaller ) {
                    margin-top: 1.5em;
                }
            }
        }

        .btns-holder {
            a {
                margin-left: 0;
                margin-right: 0;
            }

            @include breakpoint( $mobile-large-and-smaller ) {
                text-align: center;
            }
        }
    }
}


/**
* Grid with blocks that can flexibly stretched and
* floated based on their content dynamic.
*/
.flexi-grid {
    display: flex;
    justify-content: flex-start;
    flex-wrap: wrap;
}

    .flexi-block {
        margin-bottom: 1em;
        margin-right: 8%;
        width: auto;

        &:last-child { margin-bottom: 0; }

        &.stretch {
            width: 100%;
            margin-right: 0;
        }
    }

